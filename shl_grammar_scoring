{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "4a4c25cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-06T06:07:59.499270Z",
     "iopub.status.busy": "2025-04-06T06:07:59.498785Z",
     "iopub.status.idle": "2025-04-06T06:08:07.546624Z",
     "shell.execute_reply": "2025-04-06T06:08:07.545233Z"
    },
    "papermill": {
     "duration": 8.055245,
     "end_time": "2025-04-06T06:08:07.548540",
     "exception": false,
     "start_time": "2025-04-06T06:07:59.493295",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.2.3)\r\n",
      "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (1.26.4)\r\n",
      "Collecting speechrecognition\r\n",
      "  Downloading speechrecognition-3.14.2-py3-none-any.whl.metadata (30 kB)\r\n",
      "Collecting language-tool-python\r\n",
      "  Downloading language_tool_python-2.9.2-py3-none-any.whl.metadata (54 kB)\r\n",
      "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m54.7/54.7 kB\u001b[0m \u001b[31m2.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hRequirement already satisfied: librosa in /usr/local/lib/python3.10/dist-packages (0.10.2.post1)\r\n",
      "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.10/dist-packages (1.2.2)\r\n",
      "Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.5)\r\n",
      "Requirement already satisfied: seaborn in /usr/local/lib/python3.10/dist-packages (0.12.2)\r\n",
      "Requirement already satisfied: nltk in /usr/local/lib/python3.10/dist-packages (3.2.4)\r\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.9.0.post0)\r\n",
      "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2025.1)\r\n",
      "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas) (2025.1)\r\n",
      "Requirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy) (1.3.8)\r\n",
      "Requirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy) (1.2.4)\r\n",
      "Requirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy) (0.1.1)\r\n",
      "Requirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy) (2025.0.1)\r\n",
      "Requirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy) (2022.0.0)\r\n",
      "Requirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy) (2.4.1)\r\n",
      "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from speechrecognition) (4.12.2)\r\n",
      "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from language-tool-python) (2.32.3)\r\n",
      "Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from language-tool-python) (4.67.1)\r\n",
      "Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from language-tool-python) (5.9.5)\r\n",
      "Requirement already satisfied: toml in /usr/local/lib/python3.10/dist-packages (from language-tool-python) (0.10.2)\r\n",
      "Requirement already satisfied: audioread>=2.1.9 in /usr/local/lib/python3.10/dist-packages (from librosa) (3.0.1)\r\n",
      "Requirement already satisfied: scipy>=1.2.0 in /usr/local/lib/python3.10/dist-packages (from librosa) (1.13.1)\r\n",
      "Requirement already satisfied: joblib>=0.14 in /usr/local/lib/python3.10/dist-packages (from librosa) (1.4.2)\r\n",
      "Requirement already satisfied: decorator>=4.3.0 in /usr/local/lib/python3.10/dist-packages (from librosa) (4.4.2)\r\n",
      "Requirement already satisfied: numba>=0.51.0 in /usr/local/lib/python3.10/dist-packages (from librosa) (0.60.0)\r\n",
      "Requirement already satisfied: soundfile>=0.12.1 in /usr/local/lib/python3.10/dist-packages (from librosa) (0.12.1)\r\n",
      "Requirement already satisfied: pooch>=1.1 in /usr/local/lib/python3.10/dist-packages (from librosa) (1.8.2)\r\n",
      "Requirement already satisfied: soxr>=0.3.2 in /usr/local/lib/python3.10/dist-packages (from librosa) (0.5.0.post1)\r\n",
      "Requirement already satisfied: lazy-loader>=0.1 in /usr/local/lib/python3.10/dist-packages (from librosa) (0.4)\r\n",
      "Requirement already satisfied: msgpack>=1.0 in /usr/local/lib/python3.10/dist-packages (from librosa) (1.1.0)\r\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn) (3.5.0)\r\n",
      "Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.3.1)\r\n",
      "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.12.1)\r\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.55.3)\r\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.7)\r\n",
      "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (24.2)\r\n",
      "Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (11.0.0)\r\n",
      "Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.2.0)\r\n",
      "Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from nltk) (1.17.0)\r\n",
      "Requirement already satisfied: llvmlite<0.44,>=0.43.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba>=0.51.0->librosa) (0.43.0)\r\n",
      "Requirement already satisfied: platformdirs>=2.5.0 in /usr/local/lib/python3.10/dist-packages (from pooch>=1.1->librosa) (4.3.6)\r\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->language-tool-python) (3.4.1)\r\n",
      "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->language-tool-python) (3.10)\r\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->language-tool-python) (2.3.0)\r\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->language-tool-python) (2025.1.31)\r\n",
      "Requirement already satisfied: cffi>=1.0 in /usr/local/lib/python3.10/dist-packages (from soundfile>=0.12.1->librosa) (1.17.1)\r\n",
      "Requirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy) (2024.2.0)\r\n",
      "Requirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy) (2022.0.0)\r\n",
      "Requirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy) (1.2.0)\r\n",
      "Requirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy) (2024.2.0)\r\n",
      "Requirement already satisfied: pycparser in /usr/local/lib/python3.10/dist-packages (from cffi>=1.0->soundfile>=0.12.1->librosa) (2.22)\r\n",
      "Requirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy) (2024.2.0)\r\n",
      "Downloading speechrecognition-3.14.2-py3-none-any.whl (32.9 MB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m32.9/32.9 MB\u001b[0m \u001b[31m31.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading language_tool_python-2.9.2-py3-none-any.whl (54 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m54.3/54.3 kB\u001b[0m \u001b[31m2.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: speechrecognition, language-tool-python\r\n",
      "Successfully installed language-tool-python-2.9.2 speechrecognition-3.14.2\r\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install pandas numpy speechrecognition language-tool-python librosa scikit-learn matplotlib seaborn nltk"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f9ca4c4",
   "metadata": {
    "papermill": {
     "duration": 0.004913,
     "end_time": "2025-04-06T06:08:07.559422",
     "exception": false,
     "start_time": "2025-04-06T06:08:07.554509",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# SHL Hiring Assessment: Grammar Scoring Engine for Spoken Audios\n",
    "\n",
    "## Objective\n",
    "The goal is to build a model that predicts a grammar score (0–5) for spoken audio samples based on their grammatical accuracy. The process involves:\n",
    "- Transcribing audio files to text.\n",
    "- Analyzing grammar errors in the transcriptions.\n",
    "- Extracting features and training a regression model.\n",
    "- Evaluating performance using Pearson Correlation and visualizations.\n",
    "\n",
    "## Approach\n",
    "1. Preprocess audio: Convert `.wav` files to text using Google's Speech-to-Text API.\n",
    "2. Extract features: Use grammar error counts, word count, sentence count, and average sentence length.\n",
    "3. Model: Train a tuned Random Forest Regressor and compare with a baseline model.\n",
    "4. Evaluate: Compute metrics (Pearson Correlation, MSE) and visualize results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f88822a8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-06T06:08:07.571237Z",
     "iopub.status.busy": "2025-04-06T06:08:07.570847Z",
     "iopub.status.idle": "2025-04-06T06:08:22.572343Z",
     "shell.execute_reply": "2025-04-06T06:08:22.571120Z"
    },
    "papermill": {
     "duration": 15.009787,
     "end_time": "2025-04-06T06:08:22.574434",
     "exception": false,
     "start_time": "2025-04-06T06:08:07.564647",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package punkt to /usr/share/nltk_data...\n",
      "[nltk_data]   Package punkt is already up-to-date!\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Downloading LanguageTool 6.5: 100%|██████████| 248M/248M [00:03<00:00, 74.2MB/s]\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os\n",
    "import speech_recognition as sr\n",
    "import language_tool_python\n",
    "import librosa\n",
    "import nltk\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestRegressor\n",
    "from sklearn.metrics import mean_squared_error\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from scipy.stats import pearsonr\n",
    "\n",
    "# Download NLTK data\n",
    "nltk.download(\"punkt\")\n",
    "\n",
    "# Initialize tools\n",
    "recognizer = sr.Recognizer()\n",
    "grammar_tool = language_tool_python.LanguageTool(\"en-US\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d173041d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-06T06:08:22.590762Z",
     "iopub.status.busy": "2025-04-06T06:08:22.590156Z",
     "iopub.status.idle": "2025-04-06T06:08:23.093539Z",
     "shell.execute_reply": "2025-04-06T06:08:23.092409Z"
    },
    "papermill": {
     "duration": 0.513421,
     "end_time": "2025-04-06T06:08:23.095352",
     "exception": false,
     "start_time": "2025-04-06T06:08:22.581931",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Training Data Shape: (444, 2)\n",
      "Test Data Shape: (195, 1)\n",
      "\n",
      "Training Data Sample:\n",
      "         filename  label\n",
      "0  audio_1261.wav    1.0\n",
      "1   audio_942.wav    1.5\n",
      "2  audio_1110.wav    1.5\n",
      "3  audio_1024.wav    1.5\n",
      "4   audio_538.wav    2.0\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.10/dist-packages/seaborn/_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Load datasets\n",
    "train_df = pd.read_csv(\"/kaggle/input/shl-intern-hiring-assessment/dataset/train.csv\")\n",
    "test_df = pd.read_csv(\"/kaggle/input/shl-intern-hiring-assessment/dataset/test.csv\")\n",
    "sample_submission = pd.read_csv(\"/kaggle/input/shl-intern-hiring-assessment/dataset/sample_submission.csv\")\n",
    "\n",
    "# Display basic info\n",
    "print(\"Training Data Shape:\", train_df.shape)\n",
    "print(\"Test Data Shape:\", test_df.shape)\n",
    "print(\"\\nTraining Data Sample:\")\n",
    "print(train_df.head())\n",
    "\n",
    "# Visualize grammar score distribution\n",
    "plt.figure(figsize=(8, 6))\n",
    "sns.histplot(train_df[\"label\"], bins=10, kde=True)  # Changed from \"grammar_score\" to \"label\"\n",
    "plt.title(\"Distribution of Grammar Scores (Training Set)\")\n",
    "plt.xlabel(\"Grammar Score (0-5)\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "197d40a6",
   "metadata": {
    "papermill": {
     "duration": 0.00772,
     "end_time": "2025-04-06T06:08:23.111367",
     "exception": false,
     "start_time": "2025-04-06T06:08:23.103647",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Commenting out these cells cause Ive already made transcriptions of the Audios\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f57cd028",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-06T06:08:23.129124Z",
     "iopub.status.busy": "2025-04-06T06:08:23.128725Z",
     "iopub.status.idle": "2025-04-06T06:08:23.133985Z",
     "shell.execute_reply": "2025-04-06T06:08:23.132823Z"
    },
    "papermill": {
     "duration": 0.016299,
     "end_time": "2025-04-06T06:08:23.135774",
     "exception": false,
     "start_time": "2025-04-06T06:08:23.119475",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# # Define paths (for Kaggle environment)\n",
    "# train_audio_dir = \"/kaggle/input/shl-intern-hiring-assessment/dataset/audios_train/\"\n",
    "# test_audio_dir = \"/kaggle/input/shl-intern-hiring-assessment/dataset/audios_test/\"\n",
    "\n",
    "# # Function to transcribe audio with error handling\n",
    "# def transcribe_audio(audio_path):\n",
    "#     try:\n",
    "#         with sr.AudioFile(audio_path) as source:\n",
    "#             audio = recognizer.record(source, duration=60)  # Limit to 60 seconds to match file length\n",
    "#             text = recognizer.recognize_google(audio)\n",
    "#             return text\n",
    "#     except (sr.UnknownValueError, sr.RequestError) as e:\n",
    "#         print(f\"Transcription failed for {audio_path}: {e}\")\n",
    "#         return \"\"\n",
    "#     except FileNotFoundError:\n",
    "#         print(f\"File not found: {audio_path}\")\n",
    "#         return \"\"\n",
    "\n",
    "# # Debug: Verify directory contents\n",
    "# print(\"Training audio files in directory:\")\n",
    "# print(os.listdir(train_audio_dir)[:5])  # Print first 5 files to verify\n",
    "# print(\"Test audio files in directory:\")\n",
    "# print(os.listdir(test_audio_dir)[:5])  # Print first 5 files to verify\n",
    "\n",
    "# # Transcribe training audio files\n",
    "# train_transcriptions = {}\n",
    "# for filename in train_df[\"filename\"]:\n",
    "#     audio_path = os.path.join(train_audio_dir, filename)\n",
    "#     print(f\"Transcribing training file: {audio_path}\")  # Debug print\n",
    "#     if os.path.exists(audio_path):\n",
    "#         train_transcriptions[filename] = transcribe_audio(audio_path)\n",
    "#     else:\n",
    "#         print(f\"Warning: {audio_path} not found!\")\n",
    "#         train_transcriptions[filename] = \"\"\n",
    "\n",
    "# # Transcribe test audio files\n",
    "# test_transcriptions = {}\n",
    "# for filename in test_df[\"filename\"]:\n",
    "#     audio_path = os.path.join(test_audio_dir, filename)\n",
    "#     print(f\"Transcribing test file: {audio_path}\")  # Debug print\n",
    "#     if os.path.exists(audio_path):\n",
    "#         test_transcriptions[filename] = transcribe_audio(audio_path)\n",
    "#     else:\n",
    "#         print(f\"Warning: {audio_path} not found!\")\n",
    "#         test_transcriptions[filename] = \"\"\n",
    "\n",
    "# # Add transcriptions to dataframes\n",
    "# train_df[\"transcription\"] = train_df[\"filename\"].map(train_transcriptions)\n",
    "# test_df[\"transcription\"] = test_df[\"filename\"].map(test_transcriptions)\n",
    "\n",
    "# # Save transcriptions to avoid reprocessing\n",
    "# train_df.to_csv(\"/kaggle/working/train_with_transcriptions.csv\", index=False)\n",
    "# test_df.to_csv(\"/kaggle/working/test_with_transcriptions.csv\", index=False)\n",
    "\n",
    "# # Verify transcription results\n",
    "# print(\"\\nSample transcriptions from training data:\")\n",
    "# print(train_df[[\"filename\", \"transcription\"]].head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c830fdf0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-06T06:08:23.153761Z",
     "iopub.status.busy": "2025-04-06T06:08:23.153396Z",
     "iopub.status.idle": "2025-04-06T06:08:23.157773Z",
     "shell.execute_reply": "2025-04-06T06:08:23.156631Z"
    },
    "papermill": {
     "duration": 0.015206,
     "end_time": "2025-04-06T06:08:23.159494",
     "exception": false,
     "start_time": "2025-04-06T06:08:23.144288",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# def get_grammar_errors(text):\n",
    "#     if not text or len(text.strip()) == 0:\n",
    "#         return 10\n",
    "#     matches = grammar_tool.check(text)\n",
    "#     return len(matches)\n",
    "\n",
    "# def extract_features(text):\n",
    "#     if not text or len(text.strip()) == 0:\n",
    "#         return 0, 0, 0, 0\n",
    "#     words = text.split()\n",
    "#     word_count = len(words)\n",
    "#     sentences = nltk.sent_tokenize(text)\n",
    "#     sentence_count = len(sentences)\n",
    "#     avg_sentence_length = word_count / sentence_count if sentence_count > 0 else 0\n",
    "#     error_count = get_grammar_errors(text)\n",
    "#     return word_count, sentence_count, avg_sentence_length, error_count\n",
    "\n",
    "# train_df[[\"word_count\", \"sentence_count\", \"avg_sentence_length\", \"error_count\"]] = pd.DataFrame(\n",
    "#     train_df[\"transcription\"].apply(extract_features).tolist(), index=train_df.index\n",
    "# )\n",
    "# test_df[[\"word_count\", \"sentence_count\", \"avg_sentence_length\", \"error_count\"]] = pd.DataFrame(\n",
    "#     test_df[\"transcription\"].apply(extract_features).tolist(), index=test_df.index\n",
    "# )\n",
    "\n",
    "# plt.figure(figsize=(10, 8))\n",
    "# sns.heatmap(train_df[[\"label\", \"error_count\", \"word_count\", \"sentence_count\", \"avg_sentence_length\"]].corr(), annot=True, cmap=\"coolwarm\")\n",
    "# plt.title(\"Correlation Matrix of Features\")\n",
    "# plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "bf01f774",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-06T06:08:23.178083Z",
     "iopub.status.busy": "2025-04-06T06:08:23.177686Z",
     "iopub.status.idle": "2025-04-06T06:09:07.732386Z",
     "shell.execute_reply": "2025-04-06T06:09:07.731147Z"
    },
    "papermill": {
     "duration": 44.581975,
     "end_time": "2025-04-06T06:09:07.750221",
     "exception": false,
     "start_time": "2025-04-06T06:08:23.168246",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Define functions to extract grammatical and linguistic features\n",
    "def get_grammar_errors(text):\n",
    "    if not text or len(text.strip()) == 0:\n",
    "        return 10\n",
    "    matches = grammar_tool.check(text)\n",
    "    return len(matches)\n",
    "\n",
    "def extract_features(text):\n",
    "    if not text or len(text.strip()) == 0:\n",
    "        return 0, 0, 0, 0\n",
    "    words = text.split()\n",
    "    word_count = len(words)\n",
    "    sentences = nltk.sent_tokenize(text)\n",
    "    sentence_count = len(sentences)\n",
    "    avg_sentence_length = word_count / sentence_count if sentence_count > 0 else 0\n",
    "    error_count = get_grammar_errors(text)\n",
    "    return word_count, sentence_count, avg_sentence_length, error_count\n",
    "\n",
    "# Load pre-saved transcription CSV files and original train data\n",
    "train_with_transcriptions_df = pd.read_csv(\"/kaggle/input/train-and-test/train_with_transcriptions.csv\")\n",
    "test_with_transcriptions_df = pd.read_csv(\"/kaggle/input/train-and-test/test_with_transcriptions.csv\")\n",
    "train_df = pd.read_csv(\"/kaggle/input/shl-intern-hiring-assessment/dataset/train.csv\")  # Load original train data for labels\n",
    "\n",
    "# Enforce string type on transcription column with safety check\n",
    "train_with_transcriptions_df[\"transcription\"] = train_with_transcriptions_df[\"transcription\"].astype(str).replace(\"nan\", \"\").fillna(\"\")\n",
    "test_with_transcriptions_df[\"transcription\"] = test_with_transcriptions_df[\"transcription\"].astype(str).replace(\"nan\", \"\").fillna(\"\")\n",
    "\n",
    "# Apply feature extraction to training and test data\n",
    "train_with_transcriptions_df[[\"word_count\", \"sentence_count\", \"avg_sentence_length\", \"error_count\"]] = pd.DataFrame(\n",
    "    train_with_transcriptions_df[\"transcription\"].apply(extract_features).tolist(), index=train_with_transcriptions_df.index\n",
    ")\n",
    "test_with_transcriptions_df[[\"word_count\", \"sentence_count\", \"avg_sentence_length\", \"error_count\"]] = pd.DataFrame(\n",
    "    test_with_transcriptions_df[\"transcription\"].apply(extract_features).tolist(), index=test_with_transcriptions_df.index\n",
    ")\n",
    "\n",
    "# Merge train data with features, preserving all rows\n",
    "train_merged = train_df.merge(train_with_transcriptions_df, on=\"filename\", how=\"left\", suffixes=(\"\", \"_trans\"))\n",
    "# Drop rows where label is NaN for correlation (should be none if merge is correct)\n",
    "train_merged = train_merged.dropna(subset=[\"label\"])\n",
    "plt.figure(figsize=(10, 8))\n",
    "sns.heatmap(train_merged[[\"label\", \"error_count\", \"word_count\", \"sentence_count\", \"avg_sentence_length\"]].corr(), annot=True, cmap=\"coolwarm\")\n",
    "plt.title(\"Correlation Matrix of Features\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2b4e38bd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-06T06:09:07.771561Z",
     "iopub.status.busy": "2025-04-06T06:09:07.771045Z",
     "iopub.status.idle": "2025-04-06T06:09:08.487689Z",
     "shell.execute_reply": "2025-04-06T06:09:08.486472Z"
    },
    "papermill": {
     "duration": 0.729463,
     "end_time": "2025-04-06T06:09:08.489384",
     "exception": false,
     "start_time": "2025-04-06T06:09:07.759921",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Baseline Pearson Correlation: 0.106\n",
      "Validation Pearson Correlation: 0.378\n",
      "Validation Mean Squared Error: 1.217\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Prepare features and target for modeling\n",
    "features = [\"error_count\", \"word_count\", \"sentence_count\", \"avg_sentence_length\"]\n",
    "X = train_merged[features]\n",
    "y = train_merged[\"label\"]\n",
    "\n",
    "# Split data into training and validation sets\n",
    "X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\n",
    "\n",
    "# Baseline: Average score by error count bin\n",
    "train_merged[\"error_bin\"] = pd.qcut(train_merged[\"error_count\"], q=5, labels=False, duplicates=\"drop\")\n",
    "baseline_scores = train_merged.groupby(\"error_bin\")[\"label\"].mean()\n",
    "bins = pd.qcut(train_merged[\"error_count\"], q=5, retbins=True, duplicates=\"drop\")[1]\n",
    "def baseline_predict(error_count):\n",
    "    bin_idx = pd.cut([error_count], bins=bins, labels=False, include_lowest=True)[0]\n",
    "    if pd.isna(bin_idx):\n",
    "        return baseline_scores.mean()\n",
    "    return baseline_scores[bin_idx]\n",
    "\n",
    "y_pred_baseline = [baseline_predict(ec) for ec in X_val[\"error_count\"]]\n",
    "pearson_baseline, _ = pearsonr(y_val, y_pred_baseline)\n",
    "print(f\"Baseline Pearson Correlation: {pearson_baseline:.3f}\")\n",
    "\n",
    "# Train tuned Random Forest model\n",
    "model = RandomForestRegressor(n_estimators=200, max_depth=10, random_state=42)\n",
    "model.fit(X_train, y_train)\n",
    "y_pred = model.predict(X_val)\n",
    "\n",
    "# Evaluate model performance\n",
    "pearson_corr, _ = pearsonr(y_val, y_pred)\n",
    "mse = mean_squared_error(y_val, y_pred)\n",
    "print(f\"Validation Pearson Correlation: {pearson_corr:.3f}\")\n",
    "print(f\"Validation Mean Squared Error: {mse:.3f}\")\n",
    "\n",
    "# Visualize predictions vs true values\n",
    "plt.figure(figsize=(10, 8))\n",
    "plt.scatter(y_val, y_pred_baseline, alpha=0.5, label=\"Baseline Prediction\")\n",
    "plt.scatter(y_val, y_pred, alpha=0.5, label=\"Random Forest Prediction\")\n",
    "plt.plot([0, 5], [0, 5], \"r--\", label=\"Perfect Prediction\")\n",
    "plt.xlabel(\"True Grammar Score\")\n",
    "plt.ylabel(\"Predicted Grammar Score\")\n",
    "plt.title(\"Predicted vs True Grammar Scores (Validation Set)\")\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "27564986",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-06T06:09:08.513581Z",
     "iopub.status.busy": "2025-04-06T06:09:08.513214Z",
     "iopub.status.idle": "2025-04-06T06:09:08.541859Z",
     "shell.execute_reply": "2025-04-06T06:09:08.540593Z"
    },
    "papermill": {
     "duration": 0.043035,
     "end_time": "2025-04-06T06:09:08.543931",
     "exception": false,
     "start_time": "2025-04-06T06:09:08.500896",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sample Submission:\n",
      "         filename     label\n",
      "0   audio_706.wav  3.989196\n",
      "1   audio_800.wav  4.162211\n",
      "2    audio_68.wav  3.392771\n",
      "3  audio_1267.wav  2.621960\n",
      "4   audio_683.wav  3.768492\n"
     ]
    }
   ],
   "source": [
    "# Generate predictions for test set\n",
    "X_test = test_with_transcriptions_df[features]\n",
    "test_with_transcriptions_df[\"label\"] = model.predict(X_test)  # Use 'label' for submission\n",
    "submission = test_with_transcriptions_df[[\"filename\", \"label\"]]\n",
    "submission.to_csv(\"/kaggle/working/submission.csv\", index=False)\n",
    "print(\"Sample Submission:\")\n",
    "print(submission.head())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff53d2a0",
   "metadata": {
    "papermill": {
     "duration": 0.010549,
     "end_time": "2025-04-06T06:09:08.565706",
     "exception": false,
     "start_time": "2025-04-06T06:09:08.555157",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Conclusion\n",
    "\n",
    "### Approach Summary\n",
    "- **Preprocessing**: Utilized pre-saved transcriptions from `train_with_transcriptions.csv` and `test_with_transcriptions.csv`, originally generated using Google's Speech-to-Text API.\n",
    "- **Feature Extraction**: Extracted grammar error counts, word count, sentence count, and average sentence length from transcriptions.\n",
    "- **Model**: Employed a tuned Random Forest Regressor (200 trees, max depth 10) and compared with a baseline model averaging scores by error bins.\n",
    "- **Evaluation**: Achieved a Pearson Correlation of approximately 0.378 on the validation set, outperforming the baseline.\n",
    "\n",
    "### Performance\n",
    "- The Random Forest model demonstrates moderate predictive power, with an MSE of approximately 1.217, indicating reasonable accuracy. The baseline serves as a reference, validating the model's effectiveness.\n",
    "\n",
    "## Submission\n",
    "The final predictions are saved in `/kaggle/working/submission.csv`."
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 11694977,
     "sourceId": 97919,
     "sourceType": "competition"
    },
    {
     "datasetId": 7061528,
     "sourceId": 11293520,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30919,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 72.940315,
   "end_time": "2025-04-06T06:09:09.498794",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-04-06T06:07:56.558479",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
